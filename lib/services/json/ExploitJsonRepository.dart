//ExploitJsonRepository
import 'package:assistantapps_flutter_common/assistantapps_flutter_common.dart';
import '../../contracts/exploit.dart';

import '../../contracts/exploitBase.dart';
import '../../contracts/exploitDetail.dart';

import '../../mapper/ExploitMapper.dart';

import 'interface/IExploitRepository.dart';

class ExploitJsonRepository extends BaseJsonService
    implements IExploitRepository {
  //
  @override
  Future<ResultWithValue<List<Exploit>>> getAll(context) async {
    //getAnalytics().trackEvent(AnalyticsEvent.loadExploitJson);

    try {
      List responseJson = await getListfromJson(context, "Exploits");
      List responseDetailsJson = await getListfromJson(
          context, getTranslations().fromKey(LocaleKey.exploitJson));
      List<ExploitBase> exploits =
          responseJson.map((m) => ExploitBase.fromJson(m)).toList();
      List<ExploitDetail> exploitDetails =
          responseDetailsJson.map((m) => ExploitDetail.fromJson(m)).toList();

      return ResultWithValue<List<Exploit>>(
          true, mapExploits(exploits, exploitDetails), '');
    } catch (exception) {
      getLog().e("ExploitJsonService Exception: ${exception.toString()}");
      return ResultWithValue<List<Exploit>>(
          false, List.empty(growable: true), exception.toString());
    }
  }
}
